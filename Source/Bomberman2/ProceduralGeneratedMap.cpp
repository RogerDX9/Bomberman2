// Fill out your copyright notice in the Description page of Project Settings.

#include "ProceduralGeneratedMap.h"
#include "UObject/ConstructorHelpers.h"
#include "Engine/StaticMeshActor.h"

//-------------------------------------------------------
AProceduralGeneratedMap::AProceduralGeneratedMap()
    : NbOfRows          (9)
    , NbOfCols          (9)
    , SpawnOffset       (190.f)
    , MetallicWallClass (NULL)
    , BrickWallClass    (NULL)
{
	PrimaryActorTick.bCanEverTick = true;

    RootComponent = CreateDefaultSubobject<USceneComponent>(TEXT("RootComponent"));
}

//-------------------------------------------------------
void AProceduralGeneratedMap::BeginPlay()
{
	Super::BeginPlay();

    FVector location(GetActorLocation());

    for (uint32 x = 0; x < NbOfRows; ++x)
    {
        for (uint32 y = 0; y < NbOfCols; ++y)
        {
            const FVector offset(x * SpawnOffset, y * SpawnOffset, 0);

            if (x % 2 && y % 2)
            {
                const float playerSpawnRadius = 190;
                SpawnWall(MetallicWallClass, location + offset, playerSpawnRadius);
            }
            else
            {
                if (FMath::RandBool())
                {
                    const float playerSpawnRadius = 380;
                    SpawnWall(BrickWallClass, location + offset, playerSpawnRadius);
                }
            }
        }
    }
}

//-------------------------------------------------------
void AProceduralGeneratedMap::SpawnWall(UClass* inClass, const FVector& inLocation, float inPlayerSpawnRadius)
{
    // Avoid spawning walls around player spawn point
    for (const AActor* playerStart : PlayerStartPoints)
    {
        FVector pLoc(playerStart->GetActorLocation());
        FVector diff(pLoc - inLocation);
        float s = diff.Size();

        if (s < inPlayerSpawnRadius)
        {
            return;
        }
    }

    FRotator rotation(0, 0, 0);
    AActor* spawnedActor = GetWorld()->SpawnActor(inClass, &inLocation, &rotation);

#if WITH_EDITOR
    spawnedActor->SetFolderPath("/AutoGenerated");
#endif
}
